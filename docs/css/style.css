html{box-sizing:border-box}*,*::after,*::before{box-sizing:inherit}html *{-ms-box-sizing:border-box;-moz-box-sizing:border-box;-webkit-box-sizing:border-box;box-sizing:border-box;-ms-text-size-ajust:100%;-moz-text-size-ajust:100%;-webkit-text-size-ajust:100%;text-size-ajust:100%}html{font-size:62.5%}body{overflow-x:hidden;font-size:1.6rem;font-family:"Lato",sans-serif;background-color:#F3F3F3}a{text-decoration:none;color:silver;font-size:1.6rem;-webkit-transition:all 0.3s ease-in-out;-moz-transition:all 0.3s ease-in-out;transition:all 0.3s ease-in-out}img{max-width:100%}input,textarea,select{font-family:"Lato",sans-serif;font-size:1.6rem}p{font-family:"arial",sans-serif;font-weight:400;color:#a9a9a9;line-height:20px;font-size:27.2px;font-size:1.7rem;margin:0}h1,h2,h3,h4,h5,h6{margin:0;padding:0;color:gray;font-weight:400}h1{font-size:51.2px;font-size:3.2rem}h2{font-size:44.8px;font-size:2.8rem}h3{font-size:38.4px;font-size:2.4rem}h4{font-size:32px;font-size:2rem}h5{font-size:25.6px;font-size:1.6rem}h6{font-size:19.2px;font-size:1.2rem}b{font-weight:900}ul,li{list-style:none;margin:0px}ul,ol{padding-left:0px}pre{display:block;margin-top:2rem;margin-bottom:2rem;font-size:12px;background-color:silver;border:1px solid gray;color:#000;padding:22px;border-radius:12px}@font-face{font-family:'icomoon';src:url("../fonts/icomoon.eot?m5euxn");src:url("../fonts/icomoon.eot?m5euxn#iefix") format("embedded-opentype"),url("../fonts/icomoon.ttf?m5euxn") format("truetype"),url("../fonts/icomoon.woff?m5euxn") format("woff"),url("../fonts/icomoon.svg?m5euxn#icomoon#icomoon") format("svg");font-weight:normal;font-style:normal}[class^="icon-"],[class*=" icon-"]{font-family:'icomoon' !important;speak:none;font-style:normal;font-weight:normal;font-variant:normal;text-transform:none;line-height:1;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.icon-map-marker:before{content:"\f041"}.icon-phone:before{content:"\f095"}.icon-angle-left:before{content:"\f104"}.icon-angle-right:before{content:"\f105"}.icon-angle-up:before{content:"\f106"}.icon-angle-down:before{content:"\f107"}.icon-mobile:before{content:"\f10b"}.icon-mobile-phone:before{content:"\f10b"}.icon-long-arrow-left:before{content:"\f177"}.icon-long-arrow-right:before{content:"\f178"}.icon-file-pdf-o:before{content:"\f1c1"}.icon-envelope-open:before{content:"\f2b6"}.logo{display:inline-block}.logo-syf{background:transparent url("/docs/images/theme/logo_syf.png") no-repeat center center/100%;width:200px;height:90px}.logo_box{position:relative;z-index:25;padding:15px 0px 0px}.bgi_item{background-position:center center;background-repeat:no-repeat;background-size:cover}.bgc--white{background-color:#fff}.bgc--steelblue{background-color:#216EAC}.bgc--cadetblue{background-color:#0A5593}.bgc--darkturquoise{background-color:#2E9CCB}.bg-box{position:absolute;left:50%;top:0px;width:50%;height:100%;background-color:#0A5593}.cl--white{color:#fff}.cl--white h2,.cl--white h3,.cl--white h4,.cl--white h5,.cl--white h6,.cl--white p,.cl--white b,.cl--white small{color:#fff}.cl--steelblue{color:#216EAC}.cl--steelblue h2,.cl--steelblue h3,.cl--steelblue h4,.cl--steelblue h5,.cl--steelblue h6,.cl--steelblue p,.cl--steelblue b,.cl--steelblue small{color:#216EAC}.cl--darkturquoise{color:#2E9CCB}.cl--darkturquoise h2,.cl--darkturquoise h3,.cl--darkturquoise h4,.cl--darkturquoise h5,.cl--darkturquoise h6,.cl--darkturquoise p,.cl--darkturquoise b,.cl--darkturquoise small{color:#2E9CCB}.cl--green{color:#5D886C}.cl--green h2,.cl--green h3,.cl--green h4,.cl--green h5,.cl--green h6,.cl--green p,.cl--green b,.cl--green small{color:#5D886C}.box_shadow{box-shadow:0 1px 1px rgba(0,0,0,0.05)}.mg_box--min{margin:15px}.mg_box--middle{margin:100px}.mg_box--max{margin:200px}.mg_top--x5{margin-top:5px}.mg_top--x10{margin-top:10px}.mg_top--x15{margin-top:15px}.mg_top--x20{margin-top:20px}.mg_top--x30{margin-top:30px}.mg_top--x50{margin-top:50px}.mg_top--x100{margin-top:100px}@media only screen and (min-width: 768px){.mg_top--x100i{margin-top:50px !important}}@media only screen and (min-width: 1024px){.mg_top--x100i{margin-top:100px !important}}.mg_top--x150{margin-top:150px}@media only screen and (min-width: 768px){.mg_top--x150i{margin-top:105px !important}}@media only screen and (min-width: 1024px){.mg_top--x150i{margin-top:150px !important}}.mg_bottom--x5{margin-bottom:5px}.mg_bottom--x10{margin-bottom:10px}.mg_bottom--x15{margin-bottom:15px}.mg_bottom--x20{margin-bottom:20px}.mg_bottom--x30{margin-bottom:30px}.mg_bottom--x50{margin-bottom:50px}.mg_bottom--x100{margin-bottom:100px}.mg_left--x10{margin-left:10px}.mg_left--x100{margin-left:100px}.mg_right--x10{margin-right:10px}.mg_right--x100{margin-right:100px}.pd_box--x10{padding:10px}.pd_box--x15{padding:15px}.pd_box--x20{padding:20px}.pd_footer{padding-top:20px;padding-bottom:20px}.pd_top--x10{padding-top:10px}.pd_top--x15{padding-top:15px}.pd_top--x20{padding-top:20px}.pd_top--x50{padding-top:50px}.pd_top--x100{padding-top:100px}@media only screen and (min-width: 768px){.pd_top--x100i{padding-top:50px !important}}@media only screen and (min-width: 1024px){.pd_top--x100i{padding-top:100px !important}}.pd_top--x200{padding-top:200px}.pd_bottom--x10{padding-bottom:10px}.pd_bottom--x15{padding-bottom:15px}.pd_bottom--x20{padding-bottom:20px}.pd_bottom--x50{padding-bottom:50px}.pd_bottom--x100{padding-bottom:100px}.pd_bottom--x100i{padding-bottom:100px !important}.pd_bottom--x200{padding-bottom:200px}.pd_left--x10{padding-left:10px}.pd_left--x15{padding-left:15px}.pd_left--x100{padding-left:100px}.pd_right--x10{padding-right:10px}.pd_right--x15{padding-right:15px}.pd_right--x50{padding-right:50px}.pd_right--x100{padding-right:100px}.title,.subtitle,.paragraf{display:block}.txt_italic{font-style:italic}.txt_center{text-align:center}.txt_upper{text-transform:uppercase}.txt_capital{text-transform:capitalize}.txt_right{text-align:right}.txt_shadow{text-shadow:0px 2px 2px #000}.txt_size--em3 h2,.txt_size--em3 h3,.txt_size--em3 h4,.txt_size--em3 h5,.txt_size--em3 h6,.txt_size--em3 p,.txt_size--em3 b,.txt_size--em3 small{font-size:48px;font-size:3rem}.txt_size--em4 h2,.txt_size--em4 h3,.txt_size--em4 h4,.txt_size--em4 h5,.txt_size--em4 h6,.txt_size--em4 p,.txt_size--em4 b,.txt_size--em4 small{font-size:64px;font-size:4rem}.txt_size--em5 h2,.txt_size--em5 h3,.txt_size--em5 h4,.txt_size--em5 h5,.txt_size--em5 h6,.txt_size--em5 p,.txt_size--em5 b,.txt_size--em5 small{font-size:80px;font-size:5rem}.txt_size--em6 h2,.txt_size--em6 h3,.txt_size--em6 h4,.txt_size--em6 h5,.txt_size--em6 h6,.txt_size--em6 p,.txt_size--em6 b,.txt_size--em6 small{font-size:96px;font-size:6rem}.txt_completed{text-decoration:line-through;font-style:italic;color:#F3F3F3}.completado{text-decoration:line-through;font-style:italic;color:#F3F3F3}.va_m{vertical-align:middle}.va_m span{vertical-align:middle}.va_t{vertical-align:top}.va_t span{vertical-align:top}.list--inline{padding-right:0px;padding-left:0px;margin-left:0px;list-style:none;vertical-align:middle;position:relative}.list--inline>li{display:inline-block;padding-left:10px;padding-right:10px;vertical-align:middle;position:relative;z-index:19}.circle{display:inline-block;border-radius:50%}hr{border:0;margin:0;padding:0;display:block}.hr_site{height:2px}.img_responsive{max-width:100%;height:auto;width:100%}.hidden{display:none !important}@media (min-width: 0px) and (max-width: 768px){.hidden-sm{display:none}}@media (min-width: 768px) and (max-width: 1024px){.hidden-md{display:none}}@media (min-width: 1024px) and (max-width: 1600px){.hidden-lg{display:none}}@media only screen and (min-width: 1600px){.hidden-lg{display:none}}[class*="col-"],.col{padding-top:15px;padding-bottom:15px}.three-equal-columns,.two-equal-columns,.three-unequal-columns,.two-columns,.two-columns-with-two-nested-columns,.mixed-mobile-and-desktop,.mixed-mobile-tablet-and-desktop,.offset-push-and-pull-resets{margin-left:-15px;margin-right:-15px}.three-equal-columns:before,.three-equal-columns:after,.two-equal-columns:before,.two-equal-columns:after,.three-unequal-columns:before,.three-unequal-columns:after,.two-columns:before,.two-columns:after,.two-columns-with-two-nested-columns:before,.two-columns-with-two-nested-columns:after,.mixed-mobile-and-desktop:before,.mixed-mobile-and-desktop:after,.mixed-mobile-tablet-and-desktop:before,.mixed-mobile-tablet-and-desktop:after,.offset-push-and-pull-resets:before,.offset-push-and-pull-resets:after{content:" ";display:table}.three-equal-columns:after,.two-equal-columns:after,.three-unequal-columns:after,.two-columns:after,.two-columns-with-two-nested-columns:after,.mixed-mobile-and-desktop:after,.mixed-mobile-tablet-and-desktop:after,.offset-push-and-pull-resets:after{clear:both}.three-equal-columns .col{position:relative;min-height:1px;padding-left:15px;padding-right:15px}@media (min-width: 992px){.three-equal-columns .col{float:left;width:33.33333%}}.two-equal-columns .col{position:relative;min-height:1px;padding-left:15px;padding-right:15px}@media (min-width: 992px){.two-equal-columns .col{float:left;width:50%}}.three-unequal-columns .col-3{position:relative;min-height:1px;padding-left:15px;padding-right:15px}@media (min-width: 992px){.three-unequal-columns .col-3{float:left;width:25%}}.three-unequal-columns .col-6{position:relative;min-height:1px;padding-left:15px;padding-right:15px}@media (min-width: 992px){.three-unequal-columns .col-6{float:left;width:50%}}.two-columns .col-4{position:relative;min-height:1px;padding-left:15px;padding-right:15px}@media (min-width: 992px){.two-columns .col-4{float:left;width:33.33333%}}.two-columns .col-8{position:relative;min-height:1px;padding-left:15px;padding-right:15px}@media (min-width: 992px){.two-columns .col-8{float:left;width:66.66667%}}.two-columns-with-two-nested-columns .col-8{position:relative;min-height:1px;padding-left:15px;padding-right:15px}@media (min-width: 992px){.two-columns-with-two-nested-columns .col-8{float:left;width:66.66667%}}.two-columns-with-two-nested-columns .col-6{position:relative;min-height:1px;padding-left:15px;padding-right:15px}@media (min-width: 992px){.two-columns-with-two-nested-columns .col-6{float:left;width:50%}}.two-columns-with-two-nested-columns .col-4{position:relative;min-height:1px;padding-left:15px;padding-right:15px}@media (min-width: 992px){.two-columns-with-two-nested-columns .col-4{float:left;width:33.33333%}}.mixed-mobile-and-desktop .col-large{position:relative;float:left;width:100%;min-height:1px;padding-left:15px;padding-right:15px;position:relative;min-height:1px;padding-left:15px;padding-right:15px}@media (min-width: 992px){.mixed-mobile-and-desktop .col-large{float:left;width:66.66667%}}.mixed-mobile-and-desktop .col-medium{position:relative;float:left;width:50%;min-height:1px;padding-left:15px;padding-right:15px}.mixed-mobile-and-desktop .col-small{position:relative;float:left;width:50%;min-height:1px;padding-left:15px;padding-right:15px;position:relative;min-height:1px;padding-left:15px;padding-right:15px}@media (min-width: 992px){.mixed-mobile-and-desktop .col-small{float:left;width:33.33333%}}.mixed-mobile-tablet-and-desktop .col-one{position:relative;float:left;width:100%;min-height:1px;padding-left:15px;padding-right:15px;position:relative;min-height:1px;padding-left:15px;padding-right:15px;position:relative;min-height:1px;padding-left:15px;padding-right:15px}@media (min-width: 768px){.mixed-mobile-tablet-and-desktop .col-one{float:left;width:50%}}@media (min-width: 1200px){.mixed-mobile-tablet-and-desktop .col-one{float:left;width:66.66667%}}.mixed-mobile-tablet-and-desktop .col-two{position:relative;float:left;width:50%;min-height:1px;padding-left:15px;padding-right:15px;position:relative;min-height:1px;padding-left:15px;padding-right:15px}@media (min-width: 1200px){.mixed-mobile-tablet-and-desktop .col-two{float:left;width:33.33333%}}.mixed-mobile-tablet-and-desktop .col-three{position:relative;float:left;width:50%;min-height:1px;padding-left:15px;padding-right:15px;position:relative;min-height:1px;padding-left:15px;padding-right:15px}@media (min-width: 768px){.mixed-mobile-tablet-and-desktop .col-three{float:left;width:33.33333%}}.offset-push-and-pull-resets .col-one{position:relative;min-height:1px;padding-left:15px;padding-right:15px;position:relative;min-height:1px;padding-left:15px;padding-right:15px}@media (min-width: 768px){.offset-push-and-pull-resets .col-one{float:left;width:41.66667%}}@media (min-width: 992px){.offset-push-and-pull-resets .col-one{float:left;width:50%}}.offset-push-and-pull-resets .col-two{position:relative;min-height:1px;padding-left:15px;padding-right:15px;position:relative;min-height:1px;padding-left:15px;padding-right:15px}@media (min-width: 768px){.offset-push-and-pull-resets .col-two{float:left;width:41.66667%}}@media (min-width: 768px){.offset-push-and-pull-resets .col-two{margin-left:16.66667%}}@media (min-width: 992px){.offset-push-and-pull-resets .col-two{float:left;width:50%}}@media (min-width: 992px){.offset-push-and-pull-resets .col-two{margin-left:0%}}.offset-push-and-pull-resets .col-three{position:relative;min-height:1px;padding-left:15px;padding-right:15px;position:relative;min-height:1px;padding-left:15px;padding-right:15px;position:relative;min-height:1px;padding-left:15px;padding-right:15px}@media (min-width: 768px){.offset-push-and-pull-resets .col-three{float:left;width:50%}}@media (min-width: 992px){.offset-push-and-pull-resets .col-three{float:left;width:41.66667%}}@media (min-width: 1200px){.offset-push-and-pull-resets .col-three{float:left;width:50%}}.offset-push-and-pull-resets .col-four{position:relative;min-height:1px;padding-left:15px;padding-right:15px;position:relative;min-height:1px;padding-left:15px;padding-right:15px;position:relative;min-height:1px;padding-left:15px;padding-right:15px}@media (min-width: 768px){.offset-push-and-pull-resets .col-four{float:left;width:50%}}@media (min-width: 992px){.offset-push-and-pull-resets .col-four{float:left;width:41.66667%}}@media (min-width: 992px){.offset-push-and-pull-resets .col-four{margin-left:16.66667%}}@media (min-width: 1200px){.offset-push-and-pull-resets .col-four{float:left;width:50%}}@media (min-width: 1200px){.offset-push-and-pull-resets .col-four{margin-left:0%}}.container{padding-right:15px;padding-left:15px;margin-right:auto;margin-left:auto}.auto-container{position:static;max-width:1200px;padding:0px 15px;margin:0 auto}fieldset{border:none}.form_one input[type="color"],.form_one input[type="date"],.form_one input[type="datetime"],.form_one input[type="datetime-local"],.form_one input[type="email"],.form_one input[type="month"],.form_one input[type="number"],.form_one input[type="password"],.form_one input[type="search"],.form_one input[type="tel"],.form_one input[type="text"],.form_one input[type="time"],.form_one input[type="url"],.form_one input[type="week"],.form_one input:not([type]),.form_one textarea{border-top:2px solid transparent;border-left:0px solid transparent;border-right:0px solid transparent;border-bottom:2px solid blueLight;padding:.6em 1em;display:inline-block;margin-bottom:12px;width:100%;-webkit-transition:all 0.3s ease-in-out;-moz-transition:all 0.3s ease-in-out;transition:all 0.3s ease-in-out}.form_one input[type="color"]::-webkit-input-placeholder,.form_one input[type="date"]::-webkit-input-placeholder,.form_one input[type="datetime"]::-webkit-input-placeholder,.form_one input[type="datetime-local"]::-webkit-input-placeholder,.form_one input[type="email"]::-webkit-input-placeholder,.form_one input[type="month"]::-webkit-input-placeholder,.form_one input[type="number"]::-webkit-input-placeholder,.form_one input[type="password"]::-webkit-input-placeholder,.form_one input[type="search"]::-webkit-input-placeholder,.form_one input[type="tel"]::-webkit-input-placeholder,.form_one input[type="text"]::-webkit-input-placeholder,.form_one input[type="time"]::-webkit-input-placeholder,.form_one input[type="url"]::-webkit-input-placeholder,.form_one input[type="week"]::-webkit-input-placeholder,.form_one input:not([type])::-webkit-input-placeholder,.form_one textarea::-webkit-input-placeholder{color:#a9a9a9;font-weight:700}.form_one input[type="color"]::-moz-placeholder,.form_one input[type="date"]::-moz-placeholder,.form_one input[type="datetime"]::-moz-placeholder,.form_one input[type="datetime-local"]::-moz-placeholder,.form_one input[type="email"]::-moz-placeholder,.form_one input[type="month"]::-moz-placeholder,.form_one input[type="number"]::-moz-placeholder,.form_one input[type="password"]::-moz-placeholder,.form_one input[type="search"]::-moz-placeholder,.form_one input[type="tel"]::-moz-placeholder,.form_one input[type="text"]::-moz-placeholder,.form_one input[type="time"]::-moz-placeholder,.form_one input[type="url"]::-moz-placeholder,.form_one input[type="week"]::-moz-placeholder,.form_one input:not([type])::-moz-placeholder,.form_one textarea::-moz-placeholder{color:#a9a9a9;font-weight:700}.form_one input[type="color"]:-moz-placeholder,.form_one input[type="date"]:-moz-placeholder,.form_one input[type="datetime"]:-moz-placeholder,.form_one input[type="datetime-local"]:-moz-placeholder,.form_one input[type="email"]:-moz-placeholder,.form_one input[type="month"]:-moz-placeholder,.form_one input[type="number"]:-moz-placeholder,.form_one input[type="password"]:-moz-placeholder,.form_one input[type="search"]:-moz-placeholder,.form_one input[type="tel"]:-moz-placeholder,.form_one input[type="text"]:-moz-placeholder,.form_one input[type="time"]:-moz-placeholder,.form_one input[type="url"]:-moz-placeholder,.form_one input[type="week"]:-moz-placeholder,.form_one input:not([type]):-moz-placeholder,.form_one textarea:-moz-placeholder{color:#a9a9a9;font-weight:700}.form_one input[type="color"]:-ms-input-placeholder,.form_one input[type="date"]:-ms-input-placeholder,.form_one input[type="datetime"]:-ms-input-placeholder,.form_one input[type="datetime-local"]:-ms-input-placeholder,.form_one input[type="email"]:-ms-input-placeholder,.form_one input[type="month"]:-ms-input-placeholder,.form_one input[type="number"]:-ms-input-placeholder,.form_one input[type="password"]:-ms-input-placeholder,.form_one input[type="search"]:-ms-input-placeholder,.form_one input[type="tel"]:-ms-input-placeholder,.form_one input[type="text"]:-ms-input-placeholder,.form_one input[type="time"]:-ms-input-placeholder,.form_one input[type="url"]:-ms-input-placeholder,.form_one input[type="week"]:-ms-input-placeholder,.form_one input:not([type]):-ms-input-placeholder,.form_one textarea:-ms-input-placeholder{color:#a9a9a9;font-weight:700}.form_one input[type="color"]:focus,.form_one input[type="date"]:focus,.form_one input[type="datetime"]:focus,.form_one input[type="datetime-local"]:focus,.form_one input[type="email"]:focus,.form_one input[type="month"]:focus,.form_one input[type="number"]:focus,.form_one input[type="password"]:focus,.form_one input[type="search"]:focus,.form_one input[type="tel"]:focus,.form_one input[type="text"]:focus,.form_one input[type="time"]:focus,.form_one input[type="url"]:focus,.form_one input[type="week"]:focus,.form_one input:not([type]):focus,.form_one textarea:focus{outline-offset:0px;outline:none;border-bottom:2px solid blue !important}.form_one input[type="color"].min,.form_one input[type="date"].min,.form_one input[type="datetime"].min,.form_one input[type="datetime-local"].min,.form_one input[type="email"].min,.form_one input[type="month"].min,.form_one input[type="number"].min,.form_one input[type="password"].min,.form_one input[type="search"].min,.form_one input[type="tel"].min,.form_one input[type="text"].min,.form_one input[type="time"].min,.form_one input[type="url"].min,.form_one input[type="week"].min,.form_one input:not([type]).min,.form_one textarea.min{width:100%}@media only screen and (min-width: 768px){.form_one input[type="color"].min,.form_one input[type="date"].min,.form_one input[type="datetime"].min,.form_one input[type="datetime-local"].min,.form_one input[type="email"].min,.form_one input[type="month"].min,.form_one input[type="number"].min,.form_one input[type="password"].min,.form_one input[type="search"].min,.form_one input[type="tel"].min,.form_one input[type="text"].min,.form_one input[type="time"].min,.form_one input[type="url"].min,.form_one input[type="week"].min,.form_one input:not([type]).min,.form_one textarea.min{width:32.1%}}@media only screen and (min-width: 1024px){.form_one input[type="color"].min,.form_one input[type="date"].min,.form_one input[type="datetime"].min,.form_one input[type="datetime-local"].min,.form_one input[type="email"].min,.form_one input[type="month"].min,.form_one input[type="number"].min,.form_one input[type="password"].min,.form_one input[type="search"].min,.form_one input[type="tel"].min,.form_one input[type="text"].min,.form_one input[type="time"].min,.form_one input[type="url"].min,.form_one input[type="week"].min,.form_one input:not([type]).min,.form_one textarea.min{width:32.25%}}.form_one input[type="color"].middle,.form_one input[type="date"].middle,.form_one input[type="datetime"].middle,.form_one input[type="datetime-local"].middle,.form_one input[type="email"].middle,.form_one input[type="month"].middle,.form_one input[type="number"].middle,.form_one input[type="password"].middle,.form_one input[type="search"].middle,.form_one input[type="tel"].middle,.form_one input[type="text"].middle,.form_one input[type="time"].middle,.form_one input[type="url"].middle,.form_one input[type="week"].middle,.form_one input:not([type]).middle,.form_one textarea.middle{width:100%}@media only screen and (min-width: 768px){.form_one input[type="color"].middle,.form_one input[type="date"].middle,.form_one input[type="datetime"].middle,.form_one input[type="datetime-local"].middle,.form_one input[type="email"].middle,.form_one input[type="month"].middle,.form_one input[type="number"].middle,.form_one input[type="password"].middle,.form_one input[type="search"].middle,.form_one input[type="tel"].middle,.form_one input[type="text"].middle,.form_one input[type="time"].middle,.form_one input[type="url"].middle,.form_one input[type="week"].middle,.form_one input:not([type]).middle,.form_one textarea.middle{width:48.9%}}@media only screen and (min-width: 1024px){.form_one input[type="color"].middle,.form_one input[type="date"].middle,.form_one input[type="datetime"].middle,.form_one input[type="datetime-local"].middle,.form_one input[type="email"].middle,.form_one input[type="month"].middle,.form_one input[type="number"].middle,.form_one input[type="password"].middle,.form_one input[type="search"].middle,.form_one input[type="tel"].middle,.form_one input[type="text"].middle,.form_one input[type="time"].middle,.form_one input[type="url"].middle,.form_one input[type="week"].middle,.form_one input:not([type]).middle,.form_one textarea.middle{width:49.25%}}.form_one input[type="color"].full,.form_one input[type="date"].full,.form_one input[type="datetime"].full,.form_one input[type="datetime-local"].full,.form_one input[type="email"].full,.form_one input[type="month"].full,.form_one input[type="number"].full,.form_one input[type="password"].full,.form_one input[type="search"].full,.form_one input[type="tel"].full,.form_one input[type="text"].full,.form_one input[type="time"].full,.form_one input[type="url"].full,.form_one input[type="week"].full,.form_one input:not([type]).full,.form_one textarea.full{width:100%}.form_one input[type="color"].succes,.form_one input[type="date"].succes,.form_one input[type="datetime"].succes,.form_one input[type="datetime-local"].succes,.form_one input[type="email"].succes,.form_one input[type="month"].succes,.form_one input[type="number"].succes,.form_one input[type="password"].succes,.form_one input[type="search"].succes,.form_one input[type="tel"].succes,.form_one input[type="text"].succes,.form_one input[type="time"].succes,.form_one input[type="url"].succes,.form_one input[type="week"].succes,.form_one input:not([type]).succes,.form_one textarea.succes{border-top:2px solid transparent;border-left:0px solid transparent;border-right:0px solid transparent;border-bottom:2px solid green}.form_one input[type="color"].alert,.form_one input[type="date"].alert,.form_one input[type="datetime"].alert,.form_one input[type="datetime-local"].alert,.form_one input[type="email"].alert,.form_one input[type="month"].alert,.form_one input[type="number"].alert,.form_one input[type="password"].alert,.form_one input[type="search"].alert,.form_one input[type="tel"].alert,.form_one input[type="text"].alert,.form_one input[type="time"].alert,.form_one input[type="url"].alert,.form_one input[type="week"].alert,.form_one input:not([type]).alert,.form_one textarea.alert{border-top:2px solid transparent;border-left:0px solid transparent;border-right:0px solid transparent;border-bottom:2px solid red}.form_one label{display:block}.form_one label.radio,.form_one label.checkbox{display:inline-block;padding-left:9px}.btn{border:none;box-shadow:none;border-radius:inherit;font-size:1.4rem;font-family:"Lato",sans-serif;padding:0.8em 1.2em;cursor:pointer;text-transform:uppercase;font-weight:600;-webkit-appearance:inherit;-webkit-transition:all 0.3s ease-in-out;-moz-transition:all 0.3s ease-in-out;transition:all 0.3s ease-in-out}.btn_ghost{position:absolute;top:0;left:0;width:100%;height:100%;z-index:1000;text-indent:200%;white-space:nowrap;font-size:0;opacity:0}.btn-box{position:absolute;right:0px;top:0px;z-index:12}.btn_quote{position:relative;line-height:24px;color:#fff;font-size:15px;font-weight:700;padding:21px 52px;background-color:#216EAC;text-transform:uppercase;border:2px solid transparent}.btn_quote:hover,.btn_quote:active,.btn_quote:focus{background-color:#2E9CCB;color:#fff}.btn_site{background-color:silver;color:gray}.btn_site:hover,.btn_site:active,.btn_site:focus{background-color:gray;color:white}.btn_site span.icon:after{content:"+";margin-right:12px}.btn_site--gray{background-color:silver;color:#fff}.btn_site--green{background-color:#5D886C;color:#fff}.btn_site--gold{background-color:gold;color:#fff}.btn_site--orange{background-color:#ff8c00;color:#fff}.btn_site--red{background-color:#cd5c5c;color:#fff}.header-main{position:relative;left:0;top:0;z-index:999;width:100%;-webkit-transition:all 500ms ease;-moz-transition:all 500ms ease;transition:all 500ms ease}.header-main .info_box{position:relative;float:left;min-height:35px;margin-left:35px;font-size:13px;color:gray;text-transform:uppercase;padding:0px 0px 20px 52px}.header-main .info_box .icon_box{position:absolute;left:0px;top:2px;font-size:40px;text-align:left;line-height:1em;border-radius:50%;-webkit-transition:all 500ms ease;-moz-transition:all 500ms ease;transition:all 500ms ease}.header-main .info_box li{position:relative;line-height:20px;color:silver;font-size:16px;margin-bottom:6px;font-weight:400;text-transform:capitalize}.header-main .info_box li b{font-weight:700;color:#216EAC;font-size:20px}.header-upper{position:relative;z-index:5;background-color:#fff;-webkit-transition:all 500ms ease;-moz-transition:all 500ms ease;transition:all 500ms ease}.header-upper .upper_right{position:relative;padding-top:44px}.header-lower{position:relative;top:0px;width:100%;z-index:5}.nav-outer{position:relative;padding-left:10px;padding-right:210px;margin-bottom:-35px;background-color:#0A5593}.main-menu{position:relative}.main-menu .navigation{position:relative;margin:0px}.main-menu .navigation>li{position:relative;float:left;border-right:1px solid rgba(255,255,255,0.5)}.main-menu .navigation>li>a{position:relative;display:block;font-size:18px;color:#fff;line-height:30px;font-weight:400;opacity:1;text-transform:capitalize;padding:20px 20px;text-decoration:none;-webkit-transition:all 500ms ease;-moz-transition:all 500ms ease;transition:all 500ms ease}.main-menu .navigation>li>a:hover,.main-menu .navigation>li>a:active,.main-menu .navigation>li>a:focus{color:#2E9CCB;opacity:1}.main-menu .navigation>li.dropdown>a{padding-right:40px}.main-menu .navigation>li.dropdown>a:before{font-family:'icomoon' !important;content:"\f107";position:absolute;right:20px;font-size:16px;line-height:32px}.main-menu .navigation>li.current>a{color:#2E9CCB;opacity:1}.slider{height:60vh;position:relative;width:100%;overflow:hidden;background-color:black}.slider--img{height:66vh;background-repeat:no-repeat;background-position:center center;background-size:cover;image-rendering:pixelated}.slider--img .info{position:absolute;bottom:27%;left:50%;right:auto;-webkit-transform:translateX(-50%);-moz-transform:translateX(-50%);-ms-transform:translateX(-50%);-o-transform:translateX(-50%);transform:translateX(-50%);vertical-align:middle;text-align:center}.slick-prev,.slick-next{top:inherit;top:50%;width:auto;height:auto;z-index:99;border-radius:50%;border:1px solid #fff;background-color:rgba(255,255,255,0.5);padding:15px;-webkit-transition:all 500ms ease;-moz-transition:all 500ms ease;transition:all 500ms ease}.slick-prev{left:5%}.slick-prev:hover,.slick-prev:active,.slick-prev:focus{background-color:rgba(255,255,255,0.9)}.slick-prev:before:hover,.slick-prev:before:focus{color:#2E9CCB !important}.slick-next{right:5%}.slick-prev:before,.slick-next:before{line-height:1;color:#2E9CCB;opacity:.75;font-family:'icomoon' !important;speak:none;font-weight:normal;font-variant:normal;text-transform:normal;font-size:25px}.slick-prev:before{content:"\f177"}.slick-next:before{content:"\f178"}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
